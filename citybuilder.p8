pico-8 cartridge // http://www.pico-8.com
version 27
__lua__
--city builder
--by isaac dunn

function _init()
 game_state=0--main menu
 frame_count=0
 land_gen()
 init_main()
 init_game()
end

function _update()
 if game_state==0 then
  update_main()
 else
  update_game()
 end
 frame_count+=1 
end

function _draw()
 cls()
 map()
 if game_state==0 then
  --draw_map()
  draw_main()
 else
  --draw_map()
  draw_game()
 end
end
-->8
--main menu

function init_main()
 main_cursorx=1
 init_map()
end

function update_main()
 if btnp(‚¨ÜÔ∏è) and main_cursorx==2 then
  main_cursorx-=1
  sfx(0)
 elseif btnp(‚¨áÔ∏è) and main_cursorx==1 then
  main_cursorx+=1
  sfx(0)
 elseif btnp(üÖæÔ∏è) then
  if main_cursorx==1 then
   sfx(1)
   new_game()
  else
   sfx(1)
   --load game
  end
 end
end

function draw_main()
 draw_button(24,40,"new game",7,48,46)
 draw_button(24,72,"load game",7,47,78)
 spr(16,12,main_cursorx*32+12)
 draw_logo(3,1)
end

function draw_button(offsetx,offsety
,txt,txt_colour,txt_x,txt_y)
 spr(32,0+offsetx,0+offsety)
 spr(34,0+offsetx,8+offsety)
 ui=0
 for ui_x=1,8 do
  spr(33,ui_x*8+offsetx,0+offsety)
  spr(33,ui_x*8+offsetx,8+offsety,1,1,0,1)
 end
 spr(34,72+offsetx,0+offsety,1,1,1,1)
 spr(32,72+offsetx,8+offsety,1,1,1,1)
 print(txt,txt_x,txt_y,txt_colour)
end

function draw_logo(offsetx,offsety)
 local x
 for x=0,9 do
  mset(x+offsetx,offsety,38+x)
  mset(x+offsetx,offsety+1,54+x)
 end
end 
-->8
--game data

function new_game()
 game_state=1
 init_game_logic()
 land_gen()
 init_map()
end

function load_game()
end

function save_game()
end

function land_gen()
 noise_array={}
	local x
	local y
	for x=1,16 do
	 noise_array[x]={}
		for y=1,16 do
		 noise_array[x][y]=
		 static_noise_gen(15)
		end
	end
end

function init_map()
 local x
	local y
 for x=1,16 do
  for y=1,16 do
   if noise_array[x][y]<9 then
		  mset(x-1,y-1,1)
		 elseif noise_array[x][y]<13 then
		 	mset(x-1,y-1,2)
		 elseif noise_array[x][y]<14 then
		 	mset(x-1,y-1,3)
		 elseif noise_array[x][y]<15 then
		 	mset(x-1,y-1,4)
		 end
		end
	end
end

function static_noise_gen(maxn)
 noise=rnd(maxn)
 return noise
end
-->8
--game ui
function init_game_ui()
 game_cursorx=8
 game_cursory=8
 menu_cursorx=0
 building_selected=0
 building_type="null"
end

function update_game_cursor()
 if btnp(‚¨ÖÔ∏è) then
  game_cursorx-=1
  sfx(0)
 elseif btnp(‚û°Ô∏è) then
  game_cursorx+=1
  sfx(0)
 elseif btnp(‚¨ÜÔ∏è) then
  game_cursory-=1
  sfx(0)
 elseif btnp(‚¨áÔ∏è) then
  game_cursory+=1
  sfx(0)
 elseif btnp(üÖæÔ∏è) then
  place_building()
 end
end

function update_build_menu_cursor()
 if btnp(‚¨ÖÔ∏è) and menu_cursorx>0 then
  menu_cursorx-=1
  sfx(0)
 elseif btnp(‚û°Ô∏è) and menu_cursorx<7 then
  menu_cursorx+=1
  sfx(0)
 end
end

function draw_game_cursor()
 spr(17,game_cursorx*8,game_cursory*8)
end

function draw_build_menu_cursor()
 spr(17,menu_cursorx*16,120)
end

function draw_build_menu()
 rectfill(0,104,128,128,0)
 for x=0,9 do
  spr(64+x,x*16,120)
 end
 
 if menu_cursorx==0 then
  building_type="low density housing"
 elseif menu_cursorx==1 then
  building_type="low density shopping"
 elseif menu_cursorx==2 then
  building_type="low density industry"
 elseif menu_cursorx==3 then
  building_type="high density housing"
 elseif menu_cursorx==4 then
  building_type="high density shopping"
 elseif menu_cursorx==5 then
  building_type="high density industry"
 elseif menu_cursorx==6 then
  building_type="road"
 elseif menu_cursorx==7 then
  building_type="hospital"
 end
 
 print(building_type,0,108,7)
end

function draw_cursor_info()
 rectfill(0,0,128,8,0)
 tile_type="null"
 if mget(game_cursorx,game_cursory)==1 then
  tile_type="grass"
 elseif mget(game_cursorx,game_cursory)==2 then
  tile_type="hills"
 elseif mget(game_cursorx,game_cursory)==3 then
  tile_type="mountain"
 elseif mget(game_cursorx,game_cursory)==4 then
  tile_type="lake"
 elseif fget(mget(game_cursorx,game_cursory),0)==true then
  tile_type="road"
 end
 print(tile_type,0,0,7)
 print("üòê"..flr(data.happy),40,0,7)
 print("‚åÇ"..flr(data.pop),64,0,7)
 print("$"..flr(data.cash),96,0,7)
 --print(data.traffic,96,8,7)
 --print(data.health,96,16,7)
 --print(data.employment,96,24,7)
end
-->8
--game screen

function init_game()
 build_menu_open=false
 init_game_ui()
end

function update_game()
 if btnp(‚ùé) and build_menu_open==true then
  build_menu_open=false
 elseif btnp(‚ùé) then
  build_menu_open=true
 end
 if build_menu_open==false then
  update_game_cursor()
 elseif build_menu_open==true then
  update_build_menu_cursor()
 end
 update_game_logic()
end

function draw_game()
 draw_game_cursor()
 draw_cursor_info()
 if build_menu_open==true then
  draw_build_menu()
  draw_build_menu_cursor()
 end
end

--‚Ä¶‚àß‚ñë‚û°Ô∏è‚ßó‚ñ§‚¨ÜÔ∏è‚òâüÖæÔ∏è‚óÜ{}
--‚ñà‚òÖ‚¨áÔ∏è‚úΩ‚óè‚ô•ÏõÉ‚åÇ‚¨ÖÔ∏è:@~
--|‚ñ•‚ùéüê±Àá‚ñí‚ô™üòê<>?
-->8
--place buildings
function place_building()
 remove_building()
 if menu_cursorx==0 and data.cash>=20 then
  place_low_house()
 elseif menu_cursorx==1 and data.cash>=20 then
  place_low_shop()
 elseif menu_cursorx==2 and data.cash>=20 then
  place_low_factory()
 elseif menu_cursorx==3 and data.cash>=80 then
  place_high_house()
 elseif menu_cursorx==4 and data.cash>=80 then
  place_high_shop()
 elseif menu_cursorx==5 and data.cash>=80 then
  place_high_factory()
 elseif menu_cursorx==6 and data.cash>=10 then
  place_road()
 elseif menu_cursorx==7 and data.cash>=100 then
  place_hospital()
 end
end

function place_low_house()
 mset(game_cursorx,game_cursory,64)
 data.cash-=20
 data.poplimit+=10
end

function place_low_shop()
 mset(game_cursorx,game_cursory,65)
 data.cash-=20
 data.jobs+=50
end

function place_low_factory()
 mset(game_cursorx,game_cursory,66)
 data.cash-=20
 data.jobs+=50
end

function place_high_house()
 mset(game_cursorx,game_cursory,67)
 data.cash-=80
 data.poplimit+=30
end

function place_high_shop()
 mset(game_cursorx,game_cursory,68)
 data.cash-=80
 data.jobs+=150
end

function place_high_factory()
 mset(game_cursorx,game_cursory,69)
 data.cash-=80
 data.jobs+=150
end

function place_hospital()
 mset(game_cursorx,game_cursory,71)
 data.cash-=100
 data.hositals+=1
end

function place_road()
 data.cash-=10
 data.roads+=1
 local left=get_road(-1,0)
 local right=get_road(1,0)
 local up=get_road(0,-1)
 local down=get_road(0,1)
 if up==true and down==true and
 left==true and right==true then
  mset(game_cursorx,game_cursory,116)
  update_road(0,1)
  update_road(-1,0)
  update_road(0,-1)
  update_road(1,0)
 elseif down==true and right==true and left==true then
  update_road(0,1)
  update_road(-1,0)
  update_road(1,0)
  mset(game_cursorx,game_cursory,120)
 elseif down==true and up==true and left==true then
  update_road(0,1)
  update_road(-1,0)
  update_road(0,-1)
  mset(game_cursorx,game_cursory,119)
 elseif down==true and right==true and up==true then
  update_road(0,1)
  update_road(0,-1)
  update_road(1,0)
  mset(game_cursorx,game_cursory,121)
 elseif up==true and right==true and left==true then 
  update_road(0,-1)
  update_road(-1,0)
  update_road(1,0)
  mset(game_cursorx,game_cursory,118)
 elseif down==true and right==true then
  mset(game_cursorx,game_cursory,98)
  update_road(0,1)
  update_road(1,0)
 elseif down==true and left==true then
  mset(game_cursorx,game_cursory,97)
  update_road(0,1)
  update_road(-1,0)
 elseif up==true and right==true then
  mset(game_cursorx,game_cursory,99)
  update_road(0,-1)
  update_road(1,0)
 elseif up==true and left==true then
  mset(game_cursorx,game_cursory,96)
  update_road(-1,0)
  update_road(0,-1)
 elseif up==true and down==true then
  mset(game_cursorx,game_cursory,100)
  update_road(0,-1)
  update_road(0,1)
 elseif left==true and right==true then
  mset(game_cursorx,game_cursory,70)
  update_road(-1,0)
  update_road(1,0)
 elseif left==true then
  mset(game_cursorx,game_cursory,114)
  update_road(-1,0)
 elseif right==true then
  mset(game_cursorx,game_cursory,112)
  update_road(1,0)
 elseif up==true then
  mset(game_cursorx,game_cursory,113)
  update_road(0,-1)
 elseif down==true then
  mset(game_cursorx,game_cursory,115)
  update_road(0,1)
 else
  mset(game_cursorx,game_cursory,117)
 end
  
end

function get_road(offsetx,offsety)
 if fget(mget(game_cursorx+offsetx,game_cursory+offsety),0) then
  return true
 end
 return false
end

function update_road(offsetx,offsety)
 local left=get_road(-1+offsetx,0+offsety)
 local right=get_road(1+offsetx,0+offsety)
 local up=get_road(0+offsetx,-1+offsety)
 local down=get_road(0+offsetx,1+offsety)
 
 if up==true and down==true and
 left==true and right==true then
  mset(game_cursorx+offsetx,game_cursory+offsety,116)
 elseif down==true and right==true and left==true then
  mset(game_cursorx+offsetx,game_cursory+offsety,120)
 elseif down==true and up==true and left==true then
  mset(game_cursorx+offsetx,game_cursory+offsety,119)
 elseif down==true and right==true and up==true then
  mset(game_cursorx+offsetx,game_cursory+offsety,121)
 elseif up==true and right==true and left==true then 
  mset(game_cursorx+offsetx,game_cursory+offsety,118)
 elseif down==true and right==true then
  mset(game_cursorx+offsetx,game_cursory+offsety,98)
 elseif down==true and left==true then
  mset(game_cursorx+offsetx,game_cursory+offsety,97)
 elseif up==true and right==true then
  mset(game_cursorx+offsetx,game_cursory+offsety,99)
 elseif up==true and left==true then
  mset(game_cursorx+offsetx,game_cursory+offsety,96)
 elseif up==true and down==true then
  mset(game_cursorx+offsetx,game_cursory+offsety,100)
 elseif left==true and right==true then
  mset(game_cursorx+offsetx,game_cursory+offsety,70)
 elseif left==true then
  mset(game_cursorx+offsetx,game_cursory+offsety,114)
 elseif right==true then
  mset(game_cursorx+offsetx,game_cursory+offsety,112)
 elseif up==true then
  mset(game_cursorx+offsetx,game_cursory+offsety,113)
 elseif down==true then
  mset(game_cursorx+offsetx,game_cursory+offsety,115)
 end
end

function remove_building()
 building_id=mget(game_cursorx,game_cursory)
 if building_id==64 then
  data.cash+=20
  data.poplimit-=10
 elseif building_id==65 then
  data.cash+=20
  data.jobs-=10
 elseif building_id==66 then
  data.cash+=20
  data.jobs-=10
 elseif building_id==67 then
  data.cash+=80
  data.poplimit-=30
 elseif building_id==68 then
  data.cash+=80
  data.jobs-=150
 elseif building_id==69 then
  data.cash+=80
  data.jobs-=150
 elseif building_id==70 then
  data.cash+=100
  data.hositals-=1
 elseif building_id==71 then
  data.cash+=10
  data.roads-=1
 end
end
-->8
--game logic
function init_game_logic()
 data={}
 data.pop=1
 data.poplimit=1
 data.employment=100
 data.jobs=0
 data.traffic=0
 data.roads=1
 data.health=100
 data.hositals=1
 data.cash=1000
 data.happy=100
end

function update_game_logic()
 if frame_count==30 then
  frame_count=0
  data.cash+=data.pop/10
  data.pop+=(data.poplimit-data.pop)/1000*data.happy
  data.employment=(data.jobs-data.pop)/100
  data.health=(data.hositals*10)/data.pop
  data.traffic=data.pop/data.roads/10
  data.happy+=data.health-data.traffic+data.employment/10
  if data.happy>100 then
   data.happy=100
  elseif data.happy<-100 then
   data.happy=-100
  end
 end
end


__gfx__
000000003333b3333333333333336333333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000003b333333333bb3333336663333cccc330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00700700b333383333bbbb33334445333cccdcc30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0007700033338b833bbbbbb3344445533ddcccc30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0007700033333833bbbbbbbb344444533cccccc30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0070070033a333b33bbbbbb3444444553ccddcc30000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000003aba333b333bb3334444445533cccc330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000033a33b333333333333444433333333330000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
dd000000770000770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
dddd0000700000070770077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d22ddd00000000000700007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d2222ddd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d2222ddd000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
d22ddd00000000000700007000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
dddd0000700000070770077000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
dd000000770000770000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
555555555555555552dddddd00000000000000000000000033000dddddddd000000000aaa000000000000cc0000000000008880000000880000000eeee000033
522222222222222252dddddd000000000000000000000000300ddddddddddd0000000aaaaa00000000000cc00000000000008880000088000000eeeeeee00003
522ddddddddddddd52dddddd00000000000000000000000000ddddddd0dddd0000000aaaa000000000000cc00000000000000880000888000000ee0000ee0000
52dddddddddddddd52dddddd00000000000000000000000000ddd0000000d000000000000000000000000cc0000000000000088800088800000ee000000e0000
52dddddddddddddd52dddddd00000000000000000000000000dd000000000000000000000000000000000cccccc0000000000088808888000000ee0000ee0000
52dddddddddddddd522ddddd00000000000000000000000000dd000000000000000000aa0000000000000cccccc00000000000888888800000000ee000ee0000
52dddddddddddddd5222222200000000000000000000000000dd000000000000000000aa000000000000ccc0000000000000000008880000000000eeeee00000
52dddddddddddddd5555555500000000000000000000000000ddd00000000000000000aa0000000000000ccc00000000000000008888000000000ee000ee0000
000000000000000000000000000000000000000000000000000ddd0000000000000000aaa000000000000ccc0000000000000008888000000000ee00000ee000
000000000000000000000000000000000000000000000000000dddd0000ddd000000000aaa000000000000ccc000000000000088888000000000ee0000eee000
0000000000000000000000000000000000000000000000000000ddddddddd0000000000aaa0000000000000ccc000000000008888800000000000eeeeee00000
000000000000000000000000000000000000000000000000000000ddddd0000000000000aaa0000000000000ccc000000000088800000000000000eeee000000
00000000000000000000000000000000000000000000000055555555555555555555555555555555555555555555555555555555555555555555555555555555
00000000000000000000000000000000000000000000000055555555555555555555555555555555555555555555555555555555555555555555555555555555
00000000000000000000000000000000000000000000000037757757757757757757757757757757757757757757757757757757757757757757757757757753
00000000000000000000000000000000000000000000000033555555555555555555555555555555555555555555555555555555555555555555555555555533
333334333c3c33c335333333366666533ddddd233352352366666666333666650000000000000000000000000000000000000000000000000000000000000000
33dddd236c6cc6c535353333366666533deeed233352352355555555333668650000000000000000000000000000000000000000000000000000000000000000
3dddddd2666666653535333336c6c6533ddddd233352352355555555333688850000000000000000000000000000000000000000000000000000000000000000
34444445ddddddd234444445366666533ddddd233444444555555555666668650000000000000000000000000000000000000000000000000000000000000000
34cc4445ddddccc23444cc4536c6c6533dcdcd2334c4cc4557755775666666650000000000000000000000000000000000000000000000000000000000000000
34cc4545d55dccc23454cc45366666533ddddd233444cc4555555555656c66c50000000000000000000000000000000000000000000000000000000000000000
34444545d55dddd2345444453656c6533d5dcd233454cc4555555555656666650000000000000000000000000000000000000000000000000000000000000000
333336333663333333633333365666533d5ddd233454444566666666363333330000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
65555556666666666666666665555556655555560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55557556555555566555555565557555655575560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55557556555555566555555565557555655575560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555556555555566555555565555555655555560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
57755556577555566555577565555775655555560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555556555575566555755565555555655575560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
55555556555575566555755565555555655575560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666655555566555555666666666655555560000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
66666666655555566666666666666666655555566666666665555556655555566666666665555556000000000000000000000000000000000000000000000000
65555555655575565555555665555556557557556555555655557555555575565555555565557555000000000000000000000000000000000000000000000000
65555555655575565555555665555556575555756555555655557555555575565555555565557555000000000000000000000000000000000000000000000000
65555555655555565555555665555556555555556555555655555555555555565555555565555555000000000000000000000000000000000000000000000000
65555775655555565775555665555556555555556555555657755775577555565775577565555775000000000000000000000000000000000000000000000000
65555555655555565555555665557556575555756555555655555555555575565555755565557555000000000000000000000000000000000000000000000000
65555555655555565555555665557556557557556555555655555555555575565555755565557555000000000000000000000000000000000000000000000000
66666666666666666666666665555556655555566666666666666666655555566555555665555556000000000000000000000000000000000000000000000000
__gff__
0002020202000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000000000000000000000000000000000000000101010101000000000000000000000001010101010101010101000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000007700000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000000efefefefefefefefefefef000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000002021212121212121212200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000003031313131313131313200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000002021212121212121212200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0000003031313131313131313200000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__sfx__
000100001b7501c7501d7501875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000021150281500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000f0000c0001650009200092000a2000b2000c2000d2000f2001020010200112001120011200112000f2000e2000a2000920006200022000020004100021000b0001200004000040000c7000200006700
